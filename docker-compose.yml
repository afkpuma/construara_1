# docker-compose.yml
version: '3.8' # Define a versão da sintaxe do Docker Compose

services:
  web: # Serviço para a sua aplicação Flask (o backend)
    build: . # Diz ao Docker para construir a imagem a partir do Dockerfile no diretório atual
    ports:
      - "5000:5000" # Mapeia a porta 5000 do seu host para a porta 5000 do contêiner Flask
    environment:
      # Variáveis de ambiente que o Flask vai usar para conectar ao banco de dados
      # O hostname 'db' refere-se ao nome do serviço de banco de dados definido abaixo
      DATABASE_URL: postgresql://postgres:yamzera__@1010@db:5432/construara_1
      # IMPORTANTE: Substitua 'sua_senha_do_postgres' pela senha que você usará no serviço 'db'
    depends_on:
      - db # Garante que o serviço 'db' seja iniciado antes do serviço 'web'
    volumes:
      - .:/app # Mapeia o diretório atual do seu projeto para /app no contêiner
                # Isso permite que as alterações no seu código local sejam refletidas no contêiner sem reconstruir a imagem
    command: flask run # Comando para iniciar o Flask (já definido no Dockerfile, mas pode ser sobrescrito aqui)

  db: # Serviço para o banco de dados PostgreSQL
    image: postgres:13 # Usa a imagem oficial do PostgreSQL versão 13
    environment:
      POSTGRES_DB: construara_1 # Nome do banco de dados a ser criado automaticamente
      POSTGRES_USER: postgres # Nome do usuário do banco de dados
      POSTGRES_PASSWORD: sua_senha_do_postgres # Senha para o usuário do banco de dados
      # IMPORTANTE: Substitua 'sua_senha_do_postgres' por uma senha forte e segura
    volumes:
      - pgdata:/var/lib/postgresql/data # Persiste os dados do banco de dados em um volume Docker
                                        # Isso garante que seus dados não sejam perdidos quando o contêiner for parado/removido

volumes:
  pgdata: # Define o volume nomeado para persistência dos dados do PostgreSQL
